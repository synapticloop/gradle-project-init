/**
 * 
 * Thoughtfully generated by synapticloop gradle-project-init with the templar
 * templating language.
 */


plugins {
	id 'java'
	id 'eclipse'
	id 'maven'
	id 'maven-publish'
	id 'co.riiid.gradle' version '0.3.1'
	id 'com.jfrog.bintray' version '1.4'
	id 'com.github.johnrengelman.shadow' version '1.2.2'
}

group = 'synapticloop'
archivesBaseName = 'gradle-project-init'
description = """gradle project initialiser"""

version = 'v0.0.1'

sourceCompatibility = 1.7
targetCompatibility = 1.7


repositories {
	mavenLocal()
	mavenCentral()
	jcenter()
}

dependencies {
	runtime 'commons-io:commons-io:2.4'
	runtime 'synapticloop:simplelogger:v1.0.5'
	runtime 'synapticloop:simpleusage:v1.0.0'
	runtime 'synapticloop:templar:v1.1.2'

	compile 'commons-io:commons-io:2.4'
	compile 'synapticloop:simplelogger:v1.0.5'
	compile 'synapticloop:simpleusage:v1.0.0'
	compile 'synapticloop:templar:v1.1.2'
}

configurations.all {
	resolutionStrategy {
		failOnVersionConflict()
	}
}

jar {
	manifest {
		attributes("Main-Class": "synapticloop.gradle.project.init.Main")
	}
}

build.finalizedBy(project.tasks.shadowJar)

github {
	owner = group
	repo = archivesBaseName
	token = System.getenv('GITHUB_TOKEN')
	tagName = version
	name = version
	assets = [
		'build/libs/' + archivesBaseName + '-' + version + '-all.jar'
	]
}

def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'
def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'

tasks.withType(Javadoc) {
	options.links(javaApiUrl, groovyApiUrl)
}

task javadocJar(type: Jar, dependsOn: javadoc) {
	classifier = 'javadoc'
	from 'build/docs/javadoc'
}

task sourcesJar(type: Jar) {
	from sourceSets.main.allSource
	classifier = 'sources'
}

publishing {
	publications {
			from components.java
			artifact sourcesJar
			artifact javadocJar

			groupId 'synapticloop'

			artifactId 'gradle-project-init'

			pom.withXml {
				configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each { dep ->
					asNode().dependencies[0].dependency.find {
						it.artifactId[0].text() == dep.moduleName &&
								it.groupId[0].text() == dep.moduleGroup
					}.scope[0].value = 'compile'
				}
			}
		}
	}
}

bintray {
	user = System.getenv('BINTRAY_USER')
	key = System.getenv('BINTRAY_PASSWORD')


	publish = true

	pkg {
		repo = 'maven'
		name = 'gradle-project-init'
	}

}
