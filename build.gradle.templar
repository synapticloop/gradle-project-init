/**{\n}
 * {\n}
 * Thoughtfully generated by synapticloop gradle-project-init with the templar{\n}
 * templating language.{\n}
 */{\n}
{\n}
{\n}

plugins {{{\n}
	{loop pluginList as plugin}
		{\t}id '{plugin.key}'{if fn:notNull[plugin.value]} version '{plugin.value}'{endif}{\n}
	{endloop}
}{\n}
{\n}
group = '{build.group.value}'{\n}
archivesBaseName = '{build.archivesBaseName.value}'{\n}
description = """{build.description.value}"""{\n}
{\n}
version = '{build.version.value}'{\n}
{\n}
sourceCompatibility = {build.sourceCompatibility.value}{\n}
targetCompatibility = {build.targetCompatibility.value}{\n}
{\n}
{\n}

repositories {{{\n}
	{loop repositoryList as repository}
		{\t}{repository.key}(){\n}
	{endloop}
}{\n}
{\n}

dependencies {{{\n}
	{if fn:notNull[dependencyList]}
		{loop dependencyList as dependency}
			{\t}runtime '{dependency.key}'{\n}
		{endloop}
	{\n}
		{loop dependencyList as dependency}
			{\t}compile '{dependency.key}'{\n}
		{endloop}
	{endif}
}{\n}
{\n}

configurations.all {{{\n}
{\t}resolutionStrategy {{{\n}
{\t}{\t}failOnVersionConflict(){\n}
{\t}}{\n}
}{\n}
{\n}

{if fn:notNull[task]}
	{if fn:notNull[task.h2zero]}
		task h2zero << {{{\n}
		{\t}logging.captureStandardOutput LogLevel.INFO{\n}
		{\t}ant.taskdef(resource: 'h2zero.properties',{\n}
		{\t}{\t}{\t}{\t}{\t}{\t}{\t}classpath: configurations.runtime.asPath) {{{\n}
		{\t}}{\n}
		{\t}ant.h2zero(inFile: 'src/main/resources/{build.archivesBaseName.value}.h2zero',{\n}
		{\t}{\t}outDir: '.',{\n}
		{\t}{\t}verbose: 'false') {{{\n}
		{\t}}{\n}
		}{\n}
		{\n}
	{endif}

	{if fn:notNull[task.shadowJar]}
		jar {{{\n}
		{\t}manifest {{{\n}
		{\t}{\t}attributes("Main-Class": "{build.mainClass.value}"){\n}
		{\t}}{\n}
		}{\n}
		{\n}
		build.finalizedBy(project.tasks.shadowJar){\n}
		{\n}
	{endif}

	{if fn:notNull[task.github]}
		github {{{\n}
		{\t}owner = group{\n}
		{\t}repo = archivesBaseName{\n}
		{\t}token = System.getenv('GITHUB_TOKEN'){\n}
		{\t}tagName = version{\n}
		{\t}name = version{\n}
		{\t}assets = [{\n}
		{\t}{\t}'build/libs/' + archivesBaseName + '-' + version + '-all.jar'{\n}
		{\t}]{\n}
		}{\n}
		{\n}
	{endif}

	{if fn:notNull[task.bintray]}
		def javaApiUrl = 'http://docs.oracle.com/javase/1.7.0/docs/api/'{\n}
		def groovyApiUrl = 'http://groovy.codehaus.org/gapi/'{\n}
		{\n}
		tasks.withType(Javadoc) {{{\n}
		{\t}options.links(javaApiUrl, groovyApiUrl){\n}
		}{\n}
		{\n}
		task javadocJar(type: Jar, dependsOn: javadoc) {{{\n}
		{\t}classifier = 'javadoc'{\n}
		{\t}from 'build/docs/javadoc'{\n}
		}{\n}
		{\n}
		task sourcesJar(type: Jar) {{{\n}
		{\t}from sourceSets.main.allSource{\n}
		{\t}classifier = 'sources'{\n}
		}{\n}
		{\n}
		publishing {{{\n}
		{\t}publications {{{\n}
		{\t}{\t}{build.publications.value}(MavenPublication) {{{\n}
		{\t}{\t}{\t}from components.java{\n}
		{\t}{\t}{\t}artifact sourcesJar{\n}
		{\t}{\t}{\t}artifact javadocJar{\n}
		{\n}
		{\t}{\t}{\t}groupId '{build.group.value}'{\n}
		{\n}
		{\t}{\t}{\t}artifactId '{build.archivesBaseName.value}'{\n}
		{\n}
		{\t}{\t}{\t}pom.withXml {{{\n}
		{\t}{\t}{\t}{\t}configurations.compile.resolvedConfiguration.firstLevelModuleDependencies.each {{ dep ->{\n}
		{\t}{\t}{\t}{\t}{\t}asNode().dependencies[0].dependency.find {{{\n}
		{\t}{\t}{\t}{\t}{\t}{\t}it.artifactId[0].text() == dep.moduleName &&{\n}
		{\t}{\t}{\t}{\t}{\t}{\t}{\t}{\t}it.groupId[0].text() == dep.moduleGroup{\n}
		{\t}{\t}{\t}{\t}{\t}}.scope[0].value = 'compile'{\n}
		{\t}{\t}{\t}{\t}}{\n}
		{\t}{\t}{\t}}{\n}
		{\t}{\t}}{\n}
		{\t}}{\n}
		}{\n}
		{\n}
		bintray {{{\n}
		{\t}user = System.getenv('BINTRAY_USER'){\n}
		{\t}key = System.getenv('BINTRAY_PASSWORD'){\n}
		{\n}
		{\t}publications = [ '{build.publications.value}' ]{\n}
		{\n}
		{\t}publish = true{\n}
		{\n}
		{\t}pkg {{{\n}
		{\t}{\t}repo = 'maven'{\n}
		{\t}{\t}name = '{build.archivesBaseName.value}'{\n}
		{\t}}{\n}
		{\n}
		}{\n}
	{endif}
{endif}
